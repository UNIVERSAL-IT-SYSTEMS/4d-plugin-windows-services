/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.c
 #	source generated by 4D Plugin Wizard
 #	Project : Windows Services
 #	author : miyako
 #	2012/08/18
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

#include "functions_wnds.h"

void PluginMain(int32_t selector, PA_PluginParameters params)
{
	try
	{
		int32_t pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (int32_t pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
#if VERSIONWIN			
			// --- Service Management
			
		case 1 :
			SERVICE_Set_display_name(pResult, pParams);
			break;
			
		case 2 :
			SERVICE_Get_display_name(pResult, pParams);
			break;
			
		case 3 :
			SERVICE_Change_account(pResult, pParams);
			break;
			
		case 4 :
			SERVICE_Create(pResult, pParams);
			break;
			
		case 5 :
			SERVICE_Delete(pResult, pParams);
			break;
			
		case 6 :
			SERVICE_Get_state(pResult, pParams);
			break;
			
		case 7 :
			SERVICE_Set_path(pResult, pParams);
			break;
			
		case 8 :
			SERVICE_Get_path(pResult, pParams);
			break;
			
		case 9 :
			SERVICE_Set_start_type(pResult, pParams);
			break;
			
		case 10 :
			SERVICE_Get_start_type(pResult, pParams);
			break;
			
		case 11 :
			SERVICE_Set_type(pResult, pParams);
			break;
			
		case 12 :
			SERVICE_Get_type(pResult, pParams);
			break;
			
			// --- Service Control
			
		case 13 :
			SERVICE_Resume(pResult, pParams);
			break;
			
		case 14 :
			SERVICE_Pause(pResult, pParams);
			break;
			
		case 15 :
			SERVICE_Stop(pResult, pParams);
			break;
			
		case 16 :
			SERVICE_Start(pResult, pParams);
			break;
			
			// --- Service Database
			
		case 17 :
			SERVICE_GET_LIST(pResult, pParams);
			break;
#endif			
	}
}
